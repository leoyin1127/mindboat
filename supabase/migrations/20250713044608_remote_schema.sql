create table "public"."SailingLog" (
    "sailinglog_id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null,
    "user_id" uuid not null default gen_random_uuid(),
    "session_id" uuid not null default gen_random_uuid(),
    "transcribed_text" text not null,
    "source" text
);


alter table "public"."SailingLog" enable row level security;

create table "public"."goal" (
    "user_id" uuid not null default gen_random_uuid(),
    "goal_text" text not null
);


alter table "public"."schema_versions" alter column "description" drop not null;

CREATE UNIQUE INDEX "SailingLog_id_key" ON public."SailingLog" USING btree (sailinglog_id);

CREATE UNIQUE INDEX "SailingLog_pkey" ON public."SailingLog" USING btree (sailinglog_id);

CREATE UNIQUE INDEX goal_pkey ON public.goal USING btree (user_id);

alter table "public"."SailingLog" add constraint "SailingLog_pkey" PRIMARY KEY using index "SailingLog_pkey";

alter table "public"."goal" add constraint "goal_pkey" PRIMARY KEY using index "goal_pkey";

alter table "public"."SailingLog" add constraint "SailingLog_id_key" UNIQUE using index "SailingLog_id_key";

alter table "public"."SailingLog" add constraint "SailingLog_user_id_fkey" FOREIGN KEY (user_id) REFERENCES goal(user_id) not valid;

alter table "public"."SailingLog" validate constraint "SailingLog_user_id_fkey";

grant delete on table "public"."SailingLog" to "anon";

grant insert on table "public"."SailingLog" to "anon";

grant references on table "public"."SailingLog" to "anon";

grant select on table "public"."SailingLog" to "anon";

grant trigger on table "public"."SailingLog" to "anon";

grant truncate on table "public"."SailingLog" to "anon";

grant update on table "public"."SailingLog" to "anon";

grant delete on table "public"."SailingLog" to "authenticated";

grant insert on table "public"."SailingLog" to "authenticated";

grant references on table "public"."SailingLog" to "authenticated";

grant select on table "public"."SailingLog" to "authenticated";

grant trigger on table "public"."SailingLog" to "authenticated";

grant truncate on table "public"."SailingLog" to "authenticated";

grant update on table "public"."SailingLog" to "authenticated";

grant delete on table "public"."SailingLog" to "service_role";

grant insert on table "public"."SailingLog" to "service_role";

grant references on table "public"."SailingLog" to "service_role";

grant select on table "public"."SailingLog" to "service_role";

grant trigger on table "public"."SailingLog" to "service_role";

grant truncate on table "public"."SailingLog" to "service_role";

grant update on table "public"."SailingLog" to "service_role";

grant delete on table "public"."goal" to "anon";

grant insert on table "public"."goal" to "anon";

grant references on table "public"."goal" to "anon";

grant select on table "public"."goal" to "anon";

grant trigger on table "public"."goal" to "anon";

grant truncate on table "public"."goal" to "anon";

grant update on table "public"."goal" to "anon";

grant delete on table "public"."goal" to "authenticated";

grant insert on table "public"."goal" to "authenticated";

grant references on table "public"."goal" to "authenticated";

grant select on table "public"."goal" to "authenticated";

grant trigger on table "public"."goal" to "authenticated";

grant truncate on table "public"."goal" to "authenticated";

grant update on table "public"."goal" to "authenticated";

grant delete on table "public"."goal" to "service_role";

grant insert on table "public"."goal" to "service_role";

grant references on table "public"."goal" to "service_role";

grant select on table "public"."goal" to "service_role";

grant trigger on table "public"."goal" to "service_role";

grant truncate on table "public"."goal" to "service_role";

grant update on table "public"."goal" to "service_role";

create policy "Policy with security definer functions"
on "public"."goal"
as permissive
for insert
to public
with check (true);



